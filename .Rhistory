# Copied From rcode-lecture14
###################
llbeta <- function(data, par, neg=FALSE){
alpha <- par[1]
beta <- par[2]
loglik <- sum(log(dbeta(x=data, shape = alpha, rate = beta)))
return(ifelse(neg, -loglik, loglik))
}
optim(par = c(1,1),
fn = llbeta,
data= world_bank_data_2022$`Percent of Population Which Died in 2022`,
method = "Brent",
neg = T)
llbeta <- function(data, par, neg=FALSE){
alpha <- par[1]
beta <- par[2]
loglik <- sum(log(dbeta(x=data, shape = alpha, rate = beta)))
return(ifelse(neg, -loglik, loglik))
}
optim(par = c(1,1),
fn = llbeta,
data= world_bank_data_2022$`Percent of Population Which Died in 2022`,
neg = T)
###################
# MLE (Maximum Likelihood Estimator)
# Copied From rcode-lecture14
###################
llbeta <- function(data, par, neg=FALSE){
alpha <- par[1]
beta <- par[2]
loglik <- sum(log(dbeta(x=data, shape = alpha, rate = beta)))
return(ifelse(neg, -loglik, loglik))
}
(mles <- optim(par = c(1,1),
fn = llbeta,
data= world_bank_data_2022$`Percent of Population Which Died in 2022`,
neg = T))
# MLE (Maximum Likelihood Estimator)
# Copied From rcode-lecture14
###################
llbeta <- function(data, par, neg=FALSE){
alpha <- par[1]
beta <- par[2]
loglik <- sum(log(dbeta(x=data, shape1 = alpha, shape2 = beta)))
return(ifelse(neg, -loglik, loglik))
}
(mles <- optim(par = c(1,1),
fn = llbeta,
data= world_bank_data_2022$`Percent of Population Which Died in 2022`,
neg = T))
########################################################################################################
#LAB 8
########################################################################################################
#Task 6: Collect and Clean Data:
library(tidyverse)
#Read in world bank data csv
world_bank_data <- read_csv("World_Bank_Data.csv")
#Isolate 2022 Data
world_bank_data_2022 <- world_bank_data["2022"] |>
#Divide by 1000 to Death rate per 1000 citizens
mutate(`2022` = `2022`/1000) |>
#Rename 2022 column
rename("Percent of Population Which Died in 2022" = "2022")
#Task 7: What are alpha and beta:
###################
# MOM (Method of Moments)
# Copied From rcode-lecture14
###################
library(nleqslv)
MOM.beta<- function(data, par){
alpha <- par[1]
beta <- par[2]
EX <- alpha/(alpha+beta)
EX2 <- (((alpha+1)*alpha))/((alpha+beta+1)*(alpha+beta))
m1 <- mean(data, na.rm=TRUE)
m2 <- mean(data^2, na.rm=TRUE)
return(c(EX-m1, EX2-m2))
}
nleqslv(x = c(1,1),
fn = MOM.beta,
data= world_bank_data_2022$`Percent of Population Which Died in 2022`)
###################
# MLE (Maximum Likelihood Estimator)
# Copied From rcode-lecture14
###################
llbeta <- function(data, par, neg=FALSE){
alpha <- par[1]
llgamma <- function(data, par, neg=F){
alpha <- par[1]
beta <- par[2]
loglik <- sum(log(dgamma(x=data, shape=alpha, rate=beta)))
return(ifelse(neg, -loglik, loglik))
}
(mles <- optim(par = c(1,1),
fn = llgamma,
data=dat.wind$speed,
neg=T))
alpha.hat.mle <- mles$par[1]
beta.hat.mle <- mles$par[2]
###################
llbeta <- function(data, par, neg=FALSE){
alpha <- par[1]
beta <- par[2]
loglik <- sum(log(dbeta(x=data, shape1 = alpha, shape2 = beta)))
return(ifelse(neg, -loglik, loglik))
}
(mles <- optim(par = c(1,1),
fn = llbeta,
data= world_bank_data_2022$`Percent of Population Which Died in 2022`,
neg = TRUE))
llbeta <- function(data, par, neg=FALSE){
alpha <- par[1]
beta <- par[2]
loglik <- sum(log(dbeta(x=data, shape1 = alpha, shape2 = beta)), na.rm=TRUE)
return(ifelse(neg, -loglik, loglik))
}
(mles <- optim(par = c(1,1),
fn = llbeta,
data= world_bank_data_2022$`Percent of Population Which Died in 2022`,
neg = TRUE))
alpha.hat.mle <- mles$par[1]
beta.hat.mle <- mles$par[2]
llbeta <- function(data, par, neg=FALSE){
alpha <- par[1]
beta <- par[2]
loglik <- sum(log(dbeta(x=data, shape1 = alpha, shape2 = beta)), na.rm=TRUE)
return(ifelse(neg, -loglik, loglik))
}
(mles <- optim(par = c(1,1),
fn = llbeta,
data= world_bank_data_2022$`Percent of Population Which Died in 2022`,
neg = TRUE))
alpha.hat.mle <- mles$par[1]
beta.hat.mle <- mles$par[2]
ggplot() +
geom_histogram(data= world_bank_data_2022,
aes(x= 'Percent of Population Which Died in 2022',
y= after_stat(density)),
breaks=seq(0,6,0.5),
color="lightgrey")
########################################################################################################
#LAB 8
########################################################################################################
#Task 6: Collect and Clean Data:
library(tidyverse)
#Read in world bank data csv
world_bank_data <- read_csv("World_Bank_Data.csv")
#Isolate 2022 Data
world_bank_data_2022 <- world_bank_data["2022"] |>
#Divide by 1000 to Death rate per 1000 citizens
mutate(`2022` = `2022`/1000) |>
#Rename 2022 column
rename("Percent of Population Which Died" = "2022")
#Task 7: What are alpha and beta:
###################
# MOM (Method of Moments)
# Copied and Adapted  From rcode-lecture14
###################
library(nleqslv)
MOM.beta<- function(data, par){
alpha <- par[1]
beta <- par[2]
EX <- alpha/(alpha+beta)
EX2 <- (((alpha+1)*alpha))/((alpha+beta+1)*(alpha+beta))
m1 <- mean(data, na.rm=TRUE)
m2 <- mean(data^2, na.rm=TRUE)
return(c(EX-m1, EX2-m2))
}
nleqslv(x = c(1,1),
fn = MOM.beta,
data= world_bank_data_2022$'Percent of Population Which Died')
###################
# MLE (Maximum Likelihood Estimator)
# Copied and Adapted From rcode-lecture14
###################
llbeta <- function(data, par, neg=FALSE){
alpha <- par[1]
beta <- par[2]
loglik <- sum(log(dbeta(x=data, shape1 = alpha, shape2 = beta)), na.rm=TRUE)
return(ifelse(neg, -loglik, loglik))
}
(mles <- optim(par = c(1,1),
fn = llbeta,
data= world_bank_data_2022$'Percent of Population Which Died',
neg = TRUE))
alpha.hat.mle <- mles$par[1]
beta.hat.mle <- mles$par[2]
###################
# Plot Histogram of Data Superimposed MOM and MLE Distributions
###################
ggplot() +
geom_histogram(data= world_bank_data_2022,
aes(x= Percent of Population Which Died ,
########################################################################################################
#LAB 8
########################################################################################################
#Task 6: Collect and Clean Data:
library(tidyverse)
#Read in world bank data csv
world_bank_data <- read_csv("World_Bank_Data.csv")
#Isolate 2022 Data
world_bank_data_2022 <- world_bank_data["2022"] |>
#Divide by 1000 to Death rate per 1000 citizens
mutate(`2022` = `2022`/1000) |>
#Rename 2022 column
rename("Percent_Died" = "2022")
#Task 7: What are alpha and beta:
###################
# MOM (Method of Moments)
# Copied and Adapted  From rcode-lecture14
###################
library(nleqslv)
MOM.beta<- function(data, par){
alpha <- par[1]
beta <- par[2]
EX <- alpha/(alpha+beta)
EX2 <- (((alpha+1)*alpha))/((alpha+beta+1)*(alpha+beta))
m1 <- mean(data, na.rm=TRUE)
m2 <- mean(data^2, na.rm=TRUE)
return(c(EX-m1, EX2-m2))
}
nleqslv(x = c(1,1),
fn = MOM.beta,
data= world_bank_data_2022$'Percent_Died')
###################
# MLE (Maximum Likelihood Estimator)
# Copied and Adapted From rcode-lecture14
###################
llbeta <- function(data, par, neg=FALSE){
alpha <- par[1]
beta <- par[2]
loglik <- sum(log(dbeta(x=data, shape1 = alpha, shape2 = beta)), na.rm=TRUE)
return(ifelse(neg, -loglik, loglik))
}
(mles <- optim(par = c(1,1),
fn = llbeta,
data= world_bank_data_2022$'Percent_Died',
neg = TRUE))
alpha.hat.mle <- mles$par[1]
beta.hat.mle <- mles$par[2]
###################
# Plot Histogram of Data Superimposed MOM and MLE Distributions
###################
ggplot() +
geom_histogram(data= world_bank_data_2022,
aes(x= Percent_Died,
y= after_stat(density)),
breaks=seq(0,6,0.5),
color="lightgrey")
ggplot() +
geom_histogram(data= world_bank_data_2022,
aes(x= Percent_Died,
y= after_stat(density)),
color="lightgrey")
ggplot() +
geom_histogram(data= world_bank_data_2022,
aes(x= Percent_Died,
y= after_stat(density)))
ggplot() +
geom_histogram(data= world_bank_data_2022,
aes(x= Percent_Died,
y= after_stat(density)),
color="lightgrey")
###################
# Plot Histogram of Data Superimposed MOM and MLE Distributions
###################
ggplot() +
geom_histogram(data= world_bank_data_2022,
aes(x= Percent_Died,
y= after_stat(density)),
color="lightgrey") +
xlab("Percent of Population Which Died in 2022")
View(world_bank_data)
ggplot() +
geom_histogram(data= world_bank_data_2022,
aes(x= Percent_Died,
y= after_stat(density)),
color="lightgrey") +
xlab("Percent of Population Which Died in 2022 For Various Countries")
llbeta <- function(data, par, neg=FALSE){
alpha <- par[1]
beta <- par[2]
loglik <- sum(log(dbeta(x=data, shape1 = alpha, shape2 = beta)), na.rm=TRUE)
return(ifelse(neg, -loglik, loglik))
}
(mles <- optim(par = c(1,1),
fn = llbeta,
data= world_bank_data_2022$'Percent_Died',
neg = TRUE))
alpha.hat.mle <- mles$par[1]
beta.hat.mle <- mles$par[2]
########################################################################################################
#LAB 8
########################################################################################################
#Task 6: Collect and Clean Data:
library(tidyverse)
#Read in world bank data csv
world_bank_data <- read_csv("World_Bank_Data.csv")
#Isolate 2022 Data
world_bank_data_2022 <- world_bank_data["2022"] |>
#Divide by 1000 to Death rate per 1000 citizens
mutate(`2022` = `2022`/1000) |>
#Rename 2022 column
rename("Percent_Died" = "2022")
#Task 7: What are alpha and beta:
###################
# MOM (Method of Moments)
# Copied and Adapted  From rcode-lecture14
###################
library(nleqslv)
MOM.beta<- function(data, par){
alpha <- par[1]
beta <- par[2]
EX <- alpha/(alpha+beta)
EX2 <- (((alpha+1)*alpha))/((alpha+beta+1)*(alpha+beta))
m1 <- mean(data, na.rm=TRUE)
m2 <- mean(data^2, na.rm=TRUE)
return(c(EX-m1, EX2-m2))
}
nleqslv(x = c(1,1),
fn = MOM.beta,
data= world_bank_data_2022$'Percent_Died')
# Create a sequence of x values for the Beta distribution curve
x_seq <- seq(0, max(world_bank_data_2022$`Percent of Population Which Died in 2022`, na.rm = TRUE) * 1.1, length.out = 1000)
ggdat.exp <- tibble(x=seq(0,125,length.out=1000)) |>
mutate(pdf = dexp(x, rate=1/mean(dat.tumor$`Tumor Size`)))
library(ggplot2)
# Create a sequence of x values for the Beta distribution curve
x_seq <- seq(0, 1, length.out = 1000)  # Assuming data is scaled between 0 and 1
# Calculate the Beta density values using your MLE parameters
beta_density <- dbeta(x_seq, shape1 = alpha.hat.mle, shape2 = beta.hat.mle)
# Create a data frame for the distribution curve
beta_df <- data.frame(x = x_seq, density = beta_density)
# Create the plot
ggplot() +
# Histogram of your actual data
geom_histogram(
data = world_bank_data_2022,
aes(x = Percent_Died, y = after_stat(density)),
binwidth = 0.02,  # Adjust based on your data range
color = "black",
fill = "lightblue",
alpha = 0.7
) +
# Add the fitted Beta distribution curve
geom_line(
data = beta_df,
aes(x = x, y = density),
color = "red",
size = 1.2
) +
# Add labels and title
labs(
x = "Percent of Population Died",
y = "Density",
title = "Distribution with Fitted Beta MLE",
subtitle = paste("Beta(α =", round(alpha.hat.mle, 2), ", β =", round(beta.hat.mle, 2), ")")
) +
theme_minimal()
alpha.hat.mle
beta.hat.mle
########################################################################################################
#LAB 8
########################################################################################################
#Task 6: Collect and Clean Data:
library(tidyverse)
#Read in world bank data csv
world_bank_data <- read_csv("World_Bank_Data.csv")
#Isolate 2022 Data
world_bank_data_2022 <- world_bank_data["2022"] |>
#Divide by 1000 to Death rate per 1000 citizens
mutate(`2022` = `2022`/1000) |>
#Rename 2022 column
rename("Percent_Died" = "2022")
#Task 7: What are alpha and beta:
###################
# MOM (Method of Moments)
# Copied and Adapted  From rcode-lecture14
###################
library(nleqslv)
MOM.beta<- function(data, par){
alpha <- par[1]
beta <- par[2]
EX <- alpha/(alpha+beta)
EX2 <- (((alpha+1)*alpha))/((alpha+beta+1)*(alpha+beta))
m1 <- mean(data, na.rm=TRUE)
m2 <- mean(data^2, na.rm=TRUE)
return(c(EX-m1, EX2-m2))
}
nleqslv(x = c(1,1),
fn = MOM.beta,
data= world_bank_data_2022$'Percent_Died')
###################
# MLE (Maximum Likelihood Estimator)
# Copied and Adapted From rcode-lecture14
###################
llbeta <- function(data, par, neg=FALSE){
alpha <- par[1]
beta <- par[2]
loglik <- sum(log(dbeta(x=data, shape1 = alpha, shape2 = beta)), na.rm=TRUE)
return(ifelse(neg, -loglik, loglik))
}
(mles <- optim(par = c(1,1),
fn = llbeta,
data= world_bank_data_2022$'Percent_Died',
neg = TRUE))
alpha.hat.mle <- mles$par[1]
beta.hat.mle <- mles$par[2]
###################
# Plot Histogram of Data Superimposed MOM and MLE Distributions
###################
ggplot() +
geom_histogram(data= world_bank_data_2022,
aes(x= Percent_Died,
y= after_stat(density)),
color="lightgrey") +
xlab("Percent of Population Which Died in 2022 For Various Countries")
library(ggplot2)
# Create a sequence of x values for the Beta distribution curve
x_seq <- seq(0, 1, length.out = 1000)  # Assuming data is scaled between 0 and 1
# Calculate the Beta density values using your MLE parameters
beta_density <- dbeta(x_seq, shape1 = alpha.hat.mle, shape2 = beta.hat.mle)
# Create a data frame for the distribution curve
beta_df <- tibble(x = x_seq, density = beta_density)
# Create the plot
ggplot() +
# Histogram of your actual data
geom_histogram(
data = world_bank_data_2022,
aes(x = Percent_Died, y = after_stat(density)),
binwidth = 0.02,  # Adjust based on your data range
color = "black",
fill = "lightblue",
alpha = 0.7
) +
# Add the fitted Beta distribution curve
geom_line(
data = beta_df,
aes(x = x, y = density),
color = "red",
size = 1.2
) +
# Add labels and title
labs(
x = "Percent of Population Died",
y = "Density",
title = "Distribution with Fitted Beta MLE",
subtitle = paste("Beta(α =", round(alpha.hat.mle, 2), ", β =", round(beta.hat.mle, 2), ")")
) +
theme_minimal()
# Create a sequence of x values for the Beta distribution curve
x_seq <- seq(0, 1, length.out = 1000)  # Assuming data is scaled between 0 and 1
# Calculate the Beta density values using your MLE parameters
beta_density <- dbeta(x_seq, shape1 = alpha.hat.mle, shape2 = beta.hat.mle)
# Create a data frame for the distribution curve
beta_df <- tibble(x = x_seq, density = beta_density)
ggplot() +
geom_histogram(data= world_bank_data_2022,
aes(x= Percent_Died,
y= after_stat(density)),
color="lightgrey") +
geom_histogram(
data = world_bank_data_2022,
aes(x = Percent_Died, y = after_stat(density)),
binwidth = 0.02,  # Adjust based on your data range
color = "black",
fill = "lightblue",
alpha = 0.7
) +
# Add the fitted Beta distribution curve
geom_line(
data = beta_df,
aes(x = x, y = density),
color = "red",
size = 1.2
) +
# Add labels and title
labs(
x = "Percent of Population Died",
y = "Density",
title = "Distribution with Fitted Beta MLE",
subtitle = paste("Beta(α =", round(alpha.hat.mle, 2), ", β =", round(beta.hat.mle, 2), ")")
) +
theme_minimal()
ggplot() +
geom_histogram(data= world_bank_data_2022,
aes(x= Percent_Died,
y= after_stat(density)),
color="lightgrey") +
xlab("Percent of Population Which Died in 2022 For Various Countries")
alpha <- alpha.hat.mle
beta <- beta.hat.mle
# Create a ggplot of the Beta distribution
ggplot(data.frame(x = c(0, 1)), aes(x)) +
stat_function(fun = dbeta, args = list(shape1 = alpha, shape2 = beta),
color = "blue", size = 1.5) +
labs(title = "Beta Distribution", x = "x", y = "Density") +
theme_minimal()
ggdat.exp <- tibble(x=seq(0,0.030,length.out=1000)) |>
mutate(pdf = dexp(x, rate=1/mean(world_bank_data_2022$'Percent_Died')))
ggplot()+
geom_histogram(data=dat.tumor,
breaks = seq(0, 125, 25),
color="lightgrey")+
geom_line(data=ggdat.exp)
ggdat.exp <- tibble(x=seq(0,0.030,length.out=1000)) |>
mutate(pdf = dexp(x, rate=1/mean(world_bank_data_2022$'Percent_Died')))
ggplot()+
geom_histogram(data=world_bank_data_2022,
breaks = seq(0, 125, 25),
color="lightgrey")+
geom_line(data=ggdat.exp)
